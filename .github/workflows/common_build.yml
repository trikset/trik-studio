name: Common CI
on:
  push:
    branches-ignore:
      - 'dependabot**'
    tags:
      - '*'
    paths-ignore:
      - '**/lsan.supp'
      - 'buildScripts/travis/*'
      - 'buildScripts/azure/*'
      - 'buildScripts/docker/*'
      - 'azure-pipelines.yml'
      - '.cirrus.yml'
      - '.travis.yml'
      - '.mergify.yml'
      - 'Brewfile'
      - '**/*.html'
      - '**/*.txt'
      - '**/*.md'
      - 'installer/packages/**/meta/prebuild-mac.sh'
      - 'installer/packages/**/meta/prebuild-linux-gnu.sh'
      - '**/*.dockerfile'
      - '**/*.Dockerfile'
      - '**/Dockerfile'
      - '**/Dockerfile.*'
      - 'plugins/robots/checker/scripts/build-checker-installer.sh'
      - '.github/workflows/centos.yml'
  pull_request:
    branches-ignore:
      - 'dependabot**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    uses: ./.github/workflows/setup_environment.yml
    with:
      os: ubuntu-latest
      lint: true
      build: false
      build_installer: false

  build-macos-release-tests:
    needs: lint
    uses: ./.github/workflows/setup_environment.yml
    with:
      os: macos-13
      build: true
      build_installer: false
      qmake_extra: "CONFIG+=tests CONFIG+=noPch CONFIG+=ccache CONFIG+=no-sanitizers CONFIG+=warn_off"
      trik_python3_version_minor: 11

  build-macos-debug-tests:
    needs: lint
    uses: ./.github/workflows/setup_environment.yml
    with:
      os: macos-13
      build: true
      build_installer: false
      config: debug
      qmake_extra: "CONFIG+=warn_off CONFIG+=tests CONFIG+=noPch CONFIG+=ccache CONFIG+=small_debug_info CONFIG+=sanitizer CONFIG+=sanitize_undefined CONFIG+=sanitize_address"
      trik_python3_version_minor: 11

  build-macos-installer:
    needs: [build-macos-debug-tests, build-macos-release-tests]
    uses: ./.github/workflows/setup_environment.yml
    with:
      os: macos-13
      build: true
      build_installer: true
      qmake_extra: " CONFIG+=noPch CONFIG+=ccache CONFIG+=no-sanitizers CONFIG+=silent CONFIG+=warn_off"
      trik_python3_version_minor: 11
      tests: true
    secrets: inherit

  install-macos-installer:
    needs: build-macos-installer   
    uses: ./.github/workflows/installer.yml
    with:
      os: macos-13
      artifact_name: macos-installer

  build-ubuntu-release-tests:
    needs: lint
    uses: ./.github/workflows/setup_environment.yml
    with:
      os: ubuntu-22.04
      build: true
      build_installer: false
      qmake_extra: "CONFIG+=tests CONFIG+=noPch CONFIG+=ccache CONFIG+=no-sanitizers"
      trik_python3_version_minor: 10

  build-ubuntu-debug-tests:
    needs: lint
    uses: ./.github/workflows/setup_environment.yml
    with:
      os: ubuntu-22.04
      build: true
      build_installer: false
      config: debug
      qmake_extra: "CONFIG+=tests CONFIG+=noPch CONFIG+=ccache CONFIG+=small_debug_info CONFIG+=sanitizer CONFIG+=sanitize_undefined CONFIG+=sanitize_address"
      trik_python3_version_minor: 10

  build-altlinux-release-tests:
    needs: lint
    uses: ./.github/workflows/setup_environment.yml
    with:
      os: ubuntu-latest
      container_name: alt:latest
      build: true
      build_installer: false
      qmake_extra: "CONFIG+=tests CONFIG+=noPch CONFIG+=ccache CONFIG+=no-sanitizers"
      tests: true

  build-rockylinux-distro-release-tests:
    needs: lint
    uses: ./.github/workflows/setup_environment.yml
    with:
      os: ubuntu-latest
      container_name: rockylinux:8
      build: true
      build_installer: false
      qmake_extra: "CONFIG+=tests CONFIG+=noPch CONFIG+=ccache CONFIG+=sanitizer CONFIG+=sanitize-undefined"
      gcc_version: 13
      shell: bash -l {0}
      trik_python3_version_minor: 11

  # Use Python 3.11, as the Python 3.12 package in Rocky Linux AppStream x86_64 crashes 
  # with a segmentation fault when restarting the interpreter during the import of asyncio 
  # (specifically when loading _ssl) in PythonQt::init().
  build-rockylinux-installer-release-tests:
    needs: lint
    uses: ./.github/workflows/setup_environment.yml
    with:
      os: ubuntu-latest
      container_name: rockylinux:8
      build: true
      build_installer: false
      qmake_extra: "CONFIG+=tests CONFIG+=noPch CONFIG+=ccache CONFIG+=sanitizer CONFIG+=sanitize-undefined CONFIG+=sanitize_address"
      gcc_version: 13
      trik_qt_version: 5.15
      trik_python3_version_minor: 11
      linux_installer_environment: true
      shell: bash -l {0}

  build-rockylinux-installer:
    needs: [build-rockylinux-installer-release-tests]
    uses: ./.github/workflows/setup_environment.yml
    with:
      os: ubuntu-latest
      container_name: rockylinux:8
      build: true
      build_installer: true
      tests: true
      qmake_extra: "CONFIG+=noPch CONFIG+=ccache CONFIG+=no-sanitizers CONFIG+=warn_off"
      gcc_version: 13
      trik_qt_version: 5.15
      trik_python3_version_minor: 11
      linux_installer_environment: true
      shell: bash -l {0}
    secrets: inherit

  install-ubuntu-installer:
    needs: [build-rockylinux-installer]  
    uses: ./.github/workflows/installer.yml
    with:
      os: ubuntu-latest
      artifact_name: linux-installer

  install-ubuntu-installer-1-concurrency:
    needs: [build-rockylinux-installer]  
    uses: ./.github/workflows/installer.yml
    with:
      os: ubuntu-latest
      artifact_name: linux-installer
      concurrency: 1

  install-rockylinux-installer:
    needs: [build-rockylinux-installer]  
    uses: ./.github/workflows/installer.yml
    with:
      os: ubuntu-latest
      container_name: rockylinux:8
      artifact_name: linux-installer

  install-altlinux-installer:
    needs: [build-rockylinux-installer]  
    uses: ./.github/workflows/installer.yml
    with:
      os: ubuntu-latest
      container_name: alt:latest
      artifact_name: linux-installer

  install-archlinux-installer:
    needs: [build-rockylinux-installer]  
    uses: ./.github/workflows/installer.yml
    with:
      os: ubuntu-latest
      container_name: archlinux:latest
      artifact_name: linux-installer
