#version: 999.{branch}-{build}
clone_folder: c:\studio
#test: off

clone_depth: 1
#shallow_clone: true

skip_commits:
  files:
    - 'buildScripts/travis/*'
    - '.cirrus.yml'
    - '.travis.yml'
    - 'Brewfile'
    - '**/*.html'
    - '**/*.txt'
    - '**/*.md'
  message: /\[NOCI\]/

branches:
  except:
    - /dependabot.*/

environment:
  global:
    QTIFW: C:\Qt\Tools\QtInstallerFramework\3.0
    MSYS_DIR: C:\msys64
    APPVEYOR_SAVE_CACHE_ON_ERROR: true
    CCACHE_DIR: C:\ccache.cache
    BUILD_DIR: '%APPVEYOR_BUILD_FOLDER%\.build'
    PROJECT_FILE: studio
    TEST_SUITE: .\robots_kitBase_unittests.exe && .\robots_interpreterCore_unittests.exe && .\robots_twoDModel_unittests.exe && .\trik-v62-qts-generator-tests.exe && .\robots_utils_unittests.exe"
    APPVEYOR_CACHE_ENTRY_ZIP_ARGS: -t7z -m0=lzma -mx=9
    master_ci:
      secure: CuoEe+MMcU6PLsinM6SbBsq2QWGiTmpTH/kPfC20g7M=
  matrix:
      - QT: 5.12
        ARCH: 64
        PYTHON_PATH: C:\Python35-x64

      - QT: 5.12
        ARCH: 32
        PYTHON_PATH: C:\Python35

configuration:
#  - debug
  - release

#cache:
#  - '%BUILD_DIR% -> **\*.pr?, appveyor.yml'
#  - '%CCACHE_DIR% -> **\*.pr?, appveyor.yml'
#  - C:\ProgramData\chocolatey\bin -> appveyor.yml
#  - C:\ProgramData\chocolatey\lib -> appveyor.yml
#  - '%MSYS_DIR%\var\cache\pacman\pkg -> appveyor.yml'

init:
  - git config --global core.autocrlf true
  - if "x%appveyor_pull_request_number%" NEQ "x" set APPVEYOR_CACHE_SKIP_SAVE=true
  - if "x%appveyor_repo_branch%" NEQ "xmaster" set APPVEYOR_CACHE_SKIP_SAVE=true
  - if "%ARCH%" == "32" (set PLATFORM=i686) else (set PLATFORM=x86_64)
  - set NEED_AUTOZIP=true
  - set NEED_BINZIP=false
  - if "x%appveyor_pull_request_number%" NEQ "x" if "%APPVEYOR_REPO_COMMIT_MESSAGE:[INSTALLER]=%" EQU "%APPVEYOR_REPO_COMMIT_MESSAGE%" (set NEED_AUTOZIP=false)
  - if "x%appveyor_pull_request_number%" NEQ "x" (set NEED_BINZIP=true)

clone_script:
    - cmd: |
         git clone --progress --single-branch --no-checkout --branch=%appveyor_repo_branch% https://github.com/%appveyor_repo_name%.git %appveyor_build_folder%
         cd %appveyor_build_folder%
         if "x%appveyor_pull_request_number%" == "x" ( git checkout -f %appveyor_repo_commit% ) else ( git fetch origin +refs/pull/%appveyor_pull_request_number%/merge: && git checkout -f FETCH_HEAD )
         git submodule update --init --recursive


install:
  - set PYTHON_LIB=%PYTHON_PATH%\libs
  - set QTDIR=C:\Qt\5.12\mingw73_%ARCH%
  - set MINGW=%QTDIR%\..\..\Tools\mingw730_%ARCH%
  - set PATH=%QTDIR%\bin;%MINGW%\bin;C:\msys64\mingw%ARCH%\bin;C:\msys64\usr\bin;%PATH%
# need to reconfigure because it is anouther one git
  - git config --global core.autocrlf true
  - pacman --verbose --noconfirm --sync ccache rsync curl unzip
  - pacman -Su --noconfirm mingw%ARCH%/mingw-w64-%PLATFORM%-libusb mingw%ARCH%/mingw-w64-%PLATFORM%-pkg-config
#--refresh --sysupgrade --ask=20
  - ccache.exe -V || appveyor DownloadFile "http://alam.srb2.org/ccache.exe" -FileName "ccache.exe" && xcopy /Y /V /I ccache.exe %MINGW%\bin && ccache -V
  - ccache -p || echo "Failed to print ccache config (missing -p option)"
  - if not exist %BUILD_DIR% mkdir %BUILD_DIR%
  - du -sh %BUILD_DIR% %CCACHE_DIR%
  - ccache -M 900M
  - which g++
  - g++ --version
  - dir C:\Qt\Tools\
  - dir C:\Qt


before_build:
  - curl https://raw.githubusercontent.com/MestreLion/git-tools/master/git-restore-mtime-bare > .fix-mtime.py
  - python "%PYTHON_PATH%\Tools\scripts\2to3.py" -v -p -w -n -f all .fix-mtime.py
  - sed -ri "s#line.(startswith|split)\(#line.\1\(b#g" .fix-mtime.py
  - python .fix-mtime.py
  - git submodule foreach --recursive python %cd%\.fix-mtime.py


build_script:
  - cd %BUILD_DIR%
  - bash -c "env LC_ALL=C date -u"
  - qmake %APPVEYOR_BUILD_FOLDER%\%PROJECT_FILE%.pro -spec win32-g++ CONFIG+=%CONFIGURATION% CONFIG+=tests CONFIG+=silent # QMAKE_CXX="ccache g++"
  - bash -c "env LC_ALL=C date -u"
  - mingw32-make -j2 qmake_all
  - bash -c "env LC_ALL=C date -u"
  - mingw32-make -j2 -k all

test_script:
  - echo %cd%
  - cd %BUILD_DIR%\bin\%CONFIGURATION%
  - dir
  - bash -c "env LC_ALL=C date -u"
  - cmd /c %TEST_SUITE%

after_test:
# zip binaries
  - cd %BUILD_DIR%/bin/release
  - bash -c "env LC_ALL=C date -u"
  - for %%f in (*.exe) do windeployqt --release %%f
  - xcopy /I /Y %QTDIR%\plugins\platforms %BUILD_DIR%\bin\release\platforms
  - set ZIP_NAME=trik-studio
  - set APPVEYOR_REPO_BRANCH_SAFE=%APPVEYOR_REPO_BRANCH:/=-%
  - if %APPVEYOR_REPO_TAG%==true (set ZIP_NAME=%ZIP_NAME%_%APPVEYOR_REPO_TAG_NAME%) else (set ZIP_NAME=%ZIP_NAME%-%APPVEYOR_REPO_BRANCH_SAFE%)
  - set ZIP_NAME=%ZIP_NAME%_qt%QT%_%PLATFORM%.zip
  - bash -c "env LC_ALL=C date -u"
  - echo "ZipName:%ZIP_NAME%"
  - 7z a %APPVEYOR_BUILD_FOLDER%\%ZIP_NAME% .
  - cd %APPVEYOR_BUILD_FOLDER%
  - if "%NEED_BINZIP%" EQU "true" (appveyor PushArtifact %ZIP_NAME%)
# build installer
  - cd %APPVEYOR_BUILD_FOLDER%/installer
  - bash -c "env LC_ALL=C date -u"
  - build-trik-studio.sh %QTDIR%\bin %QTIFW%\bin %BUILD_DIR%
  - set INSTALLER_NAME=trik-studio-installer
  - if %APPVEYOR_REPO_TAG%==true (set INSTALLER_NAME=%INSTALLER_NAME%_%APPVEYOR_REPO_TAG_NAME%) else (set INSTALLER_NAME=%INSTALLER_NAME%-%APPVEYOR_REPO_BRANCH_SAFE%)
  - set INSTALLER_NAME=%INSTALLER_NAME%-%PLATFORM%
  - set AUTOINSTALLER_ZIP_NAME=%INSTALLER_NAME%-auto.zip
  - set INSTALLER_NAME=%INSTALLER_NAME%.exe
  - echo "Installer:%INSTALLER_NAME%"
  - ren trik-studio*installer*.exe %INSTALLER_NAME%
# pack autoinstaller
  - bash -c "env LC_ALL=C date -u"
  - 7z a %AUTOINSTALLER_ZIP_NAME% %INSTALLER_NAME% trik_studio*.qs reinstall*
  - cd %APPVEYOR_BUILD_FOLDER%
  - if "%NEED_AUTOZIP%" EQU "true" (appveyor PushArtifact installer\%AUTOINSTALLER_ZIP_NAME%)
# install
  - cd %APPVEYOR_BUILD_FOLDER%\installer
  - bash -c "env LC_ALL=C date -u"
  - cmd /c %INSTALLER_NAME% --script trik_studio_installscript.qs
  - dir C:\TRIKStudio
  - bash -c "env LC_ALL=C date -u"

before_deploy:
  - ps: if ( $artifacts.Count -eq 0 ) { exit 1 }

deploy:
  - provider: Environment
    name: trik-studio-fresh
    on:
      ARCH: 32
      APPVEYOR_PROJECT_SLUG: $(master_ci)

  - provider: Environment
    name: trik-studio-64
    on:
      ARCH: 64
      APPVEYOR_PROJECT_SLUG: $(master_ci)
      
on_finish:
  - ccache -s
  - bash -c "env LC_ALL=C date -u"


notifications:
 - provider: GitHubPullRequest
   on_build_failure: false
   template: "{{#passed}}Download:\n{{#jobs}}{{name}}\n{{#artifacts}} [{{fileName}}]({{permalink}}) \n {{/artifacts}}{{/jobs}}{{/passed}}"
