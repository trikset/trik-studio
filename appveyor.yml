#version: 999.{branch}-{build}
clone_folder: c:\studio
#test: off

clone_depth: 1
#shallow_clone: true

skip_commits:
  files:
    - '**/lsan.supp'
    - 'buildScripts/travis/*'
    - 'buildScripts/docker/*'
    - '.cirrus.yml'
    - '.travis.yml'
    - '.mergify.yml'
    - '.github/*'
    - 'Brewfile'
    - '**/*.html'
    - '**/*.txt'
    - '**/*.md'
    - 'installer/packages/**/meta/prebuild-mac.sh'
    - 'installer/packages/**/meta/prebuild-linux-gnu.sh'
    - '**/*.dockerfile'
    - '**/*.Dockerfile'
    - '**/Dockerfile'
    - '**/Dockerfile.*'
    - 'plugins/robots/checker/scripts/build-checker-installer.sh'
  message: /\[NOCI\]/

branches:
  except:
    - /dependabot.*/

environment:
  global:
    PYTHON_VERSION_MINOR: 7 # Default to Python 3.7
    MSYS_DIR: C:\msys64
    APPVEYOR_SAVE_CACHE_ON_ERROR: true
    CCACHE_DIR: C:\ccache.cache
    BUILD_DIR: '%APPVEYOR_BUILD_FOLDER%\.build'
    PROJECT_FILE: studio
    TEST_SUITE: .\robots_kitBase_unittests.exe && .\robots_interpreterCore_unittests.exe && .\robots_twoDModel_unittests.exe && .\trik-v62-qts-generator-tests.exe && .\robots_utils_unittests.exe"
    APPVEYOR_CACHE_ENTRY_ZIP_ARGS: -t7z -m0=lzma -mx=9
    master_ci:
      secure: CuoEe+MMcU6PLsinM6SbBsq2QWGiTmpTH/kPfC20g7M=
    server:
      secure: z5zq17IIHeaJejIs42wtuoK9lEQ5bqpic9FqWHUMaAA=
    password:
      secure: e2Rwbvcr6Z/YAX4N0/tO3w==
  matrix:
      - QT: 5.12
        ARCH: 32
        CONFIGURATION: release
        QTIFW: C:\Qt\Tools\QtInstallerFramework\3.1

#      - QT: 5.12
#        ARCH: 64
#        CONFIGURATION: release
#        QTIFW: C:\Qt\Tools\QtInstallerFramework\3.1

#      - QT: 5.12
#        ARCH: 32
#        PYTHON_VERSION_MINOR: 8
#        CONFIGURATION: release
#        QTIFW: C:\Qt\Tools\QtInstallerFramework\3.1


# Qt5.14 build takes too long (2x times) and reaches timeout
#      - QT: 5.14
#        ARCH: 32
#        PYTHON_VERSION_MINOR: 8
#        CONFIGURATION: release
#        QTIFW: C:\Qt\Tools\QtInstallerFramework\3.2
#        APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019

matrix:
  allow_failures:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
#cache:
#  - '%BUILD_DIR% -> **\*.pr?, appveyor.yml'
#  - '%CCACHE_DIR% -> **\*.pr?, appveyor.yml'
#  - C:\ProgramData\chocolatey\bin -> appveyor.yml
#  - C:\ProgramData\chocolatey\lib -> appveyor.yml
#  - '%MSYS_DIR%\var\cache\pacman\pkg -> appveyor.yml'
#for:
#  -
#    matrix:
#      only:
#        - QT: 5.14
#    image: Visual Studio 2019

init:
  # - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - set PYTHON_PATH=C:\Python3%PYTHON_VERSION_MINOR%
  - if "%ARCH%" == "64" (set PYTHON_PATH=%PYTHON_PATH%-x64)
  - set PYTHON_LIB=%PYTHON_PATH%\libs
  - set QTDIR=C:\Qt\%QT%\mingw73_%ARCH%
  - set MINGW=C:\Qt\Tools\mingw730_%ARCH%
  - 'dir %PYTHON_PATH% %MINGW% %QTDIR% %QTIFW% %MSYS_DIR% /w'
  - set PATH
  - set PATH=%APPVEYOR_BUILD_FOLDER%\buildScripts\appveyor;%QTDIR%\bin;%MINGW%\bin;C:\msys64\mingw%ARCH%\bin;C:\msys64\usr\bin;%SystemRoot%;%SystemRoot%\system32;C:\Program Files\7-Zip;%SystemRoot%\system32\WindowsPowerShell\v1.0;C:\Tools\curl\bin;C:\Program Files\AppVeyor\BuildAgent\
  - set PATH
  - pacman --verbose --noconfirm --sync ccache rsync curl unzip
  - if "x%appveyor_pull_request_number%" NEQ "x" set APPVEYOR_CACHE_SKIP_SAVE=true
  - if "x%appveyor_repo_branch%" NEQ "xmaster" set APPVEYOR_CACHE_SKIP_SAVE=true
  - if "%ARCH%" == "32" (set PLATFORM=i686) else (set PLATFORM=x86_64)
  - set NEED_AUTOZIP=false
  - set NEED_BINZIP=false
  - set NEED_INSTALLER=false
#TODO: multiline %APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED% can cause problems
  - 'set FULL_MESSAGE="%APPVEYOR_PULL_REQUEST_TITLE% %APPVEYOR_REPO_COMMIT_MESSAGE%"'
  - 'echo #%FULL_MESSAGE%#'
  - 'if %FULL_MESSAGE:[INSTALLER]=% NEQ %FULL_MESSAGE% ( set "NEED_INSTALLER=true" )'
  - 'if %FULL_MESSAGE:[BINZIP]=%    NEQ %FULL_MESSAGE% ( set "NEED_BINZIP=true"    )'
  - 'if %FULL_MESSAGE:[AUTOZIP]=%   NEQ %FULL_MESSAGE% ( set "NEED_AUTOZIP=true"   )'
# this is a push/merge for branch (else it is a PR)
  - if "x%appveyor_pull_request_number%" EQU "x" (set NEED_AUTOZIP=true)
#this is a tagged commit build
  - if "%APPVEYOR_REPO_TAG%" EQU "true" ( set "NEED_INSTALLER=true" && set NEED_AUTOZIP=true )
#disable artifacts for Python38
  - if "%PYTHON_VERSION_MINOR%" NEQ "7" ( set "NEED_INSTALLER=false" && set NEED_AUTOZIP=false )
  - 'echo "Deploy installer executable: %NEED_INSTALLER%"'
  - 'echo "Deploy \\bin zip archive: %NEED_BINZIP%"'
  - 'echo "Deploy full zipped installer: %NEED_AUTOZIP%"'

clone_script:
    - cmd: |
         "C:\\Program Files\\Git\\cmd\\git" config --global core.symlinks true
         "C:\\Program Files\\Git\\cmd\\git" config --global core.autocrlf true
         "C:\\Program Files\\Git\\cmd\\git" clone --progress --single-branch --no-checkout --branch=%appveyor_repo_branch% https://github.com/%appveyor_repo_name%.git %appveyor_build_folder%
         cd %appveyor_build_folder%
         if "x%appveyor_pull_request_number%" == "x" ( "C:\\Program Files\\Git\\cmd\\git" checkout -f %appveyor_repo_commit% ) else ( "C:\\Program Files\\Git\\cmd\\git" fetch origin +refs/pull/%appveyor_pull_request_number%/merge: && "C:\\Program Files\\Git\\cmd\\git" checkout -f FETCH_HEAD )
         "C:\\Program Files\\Git\\cmd\\git" submodule update --init --recursive


install:
  - 'qmake -v && qmake -query'
  - 'dir %PYTHON_PATH% %MINGW% %QTDIR% %QTIFW% %MSYS_DIR% /w'
  - pacman --verbose --noconfirm --sync ccache rsync curl unzip sshpass
  - pacman -Su --noconfirm mingw%ARCH%/mingw-w64-%PLATFORM%-libusb mingw%ARCH%/mingw-w64-%PLATFORM%-zlib mingw%ARCH%/mingw-w64-%PLATFORM%-pkg-config
#--refresh --sysupgrade --ask=20
  - ccache.exe -V || appveyor DownloadFile "http://alam.srb2.org/ccache.exe" -FileName "ccache.exe" && xcopy /Y /V /I ccache.exe %MINGW%\bin && ccache -V
  - ccache -p || echo "Failed to print ccache config (missing -p option)"
  - if not exist %BUILD_DIR% mkdir %BUILD_DIR%
  - du -sh %BUILD_DIR% %CCACHE_DIR%
  - ccache -M 900M
  - which g++
  - g++ --version
  - dir C:\Qt\Tools\
  - dir C:\Qt


# before_build:
#  - curl https://raw.githubusercontent.com/MestreLion/git-tools/master/git-restore-mtime-bare > .fix-mtime.py
#  - python "%PYTHON_PATH%\Tools\scripts\2to3.py" -v -p -w -n -f all .fix-mtime.py
#  - sed -ri "s#line.(startswith|split)\(#line.\1\(b#g" .fix-mtime.py
#  - python .fix-mtime.py
#  - git submodule foreach --recursive python %cd%\.fix-mtime.py


build_script:
  - cd %BUILD_DIR%
  - bash -c "env LC_ALL=C date -u"
  - 'git status -vv && git submodule foreach --recursive git status'
  - qmake %APPVEYOR_BUILD_FOLDER%\%PROJECT_FILE%.pro -spec win32-g++ CONFIG+=%CONFIGURATION% CONFIG+=tests CONFIG+=silent # QMAKE_CXX="ccache g++"
  - bash -c "env LC_ALL=C date -u"
  - mingw32-make -j2 qmake_all
  - bash -c "env LC_ALL=C date -u"
  - mingw32-make -j2 -k all

test_script:
  - echo %cd%
  - cd %BUILD_DIR%\bin\%CONFIGURATION%
  - dir
  - bash -c "env LC_ALL=C date -u"
  - cmd /c %TEST_SUITE%

after_test:
# zip binaries
  - cd %BUILD_DIR%/bin/%CONFIGURATION%
  - bash -c "env LC_ALL=C date -u"
  - for %%f in (*.exe) do windeployqt --%CONFIGURATION% %%f
  - xcopy /I /Y %QTDIR%\plugins\platforms %BUILD_DIR%\bin\%CONFIGURATION%\platforms
  - set ZIP_NAME=trik-studio
  - set APPVEYOR_REPO_BRANCH_SAFE=%APPVEYOR_REPO_BRANCH:/=-%
  - if %APPVEYOR_REPO_TAG%==true (set ZIP_NAME=%ZIP_NAME%_%APPVEYOR_REPO_TAG_NAME%) else (set ZIP_NAME=%ZIP_NAME%-%APPVEYOR_REPO_BRANCH_SAFE%)
  - set ZIP_NAME=%ZIP_NAME%_qt%QT%_%PLATFORM%_%CONFIGURATION%.zip
  - bash -c "env LC_ALL=C date -u"
  - echo "ZipName:%ZIP_NAME%"
  - cd %BUILD_DIR%/bin/%CONFIGURATION%
  - 7z a -- %APPVEYOR_BUILD_FOLDER%\%ZIP_NAME% .
  - cd %APPVEYOR_BUILD_FOLDER%
  - if "%NEED_BINZIP%" EQU "true" (appveyor PushArtifact %ZIP_NAME%)
  - if "%CONFIGURATION%" NEQ "release" ( exit /b 0 )
# build installer
  - cd %APPVEYOR_BUILD_FOLDER%/installer
  - bash -c "env LC_ALL=C date -u"
  - 'bash -c "./build-trik-studio.sh %QTDIR:\=/%/bin %QTIFW:\=/%/bin %BUILD_DIR:\=/%"'
  - set INSTALLER_NAME=trik-studio
  - if %APPVEYOR_REPO_TAG%==true (set INSTALLER_NAME=%INSTALLER_NAME%_%APPVEYOR_REPO_TAG_NAME%) else (set INSTALLER_NAME=%INSTALLER_NAME%-%APPVEYOR_REPO_BRANCH_SAFE%)
  - if "%PYTHON_VERSION_MINOR%" NEQ "7" (set INSTALLER_NAME=%INSTALLER_NAME%-Python3%PYTHON_VERSION_MINOR%)
  - set INSTALLER_NAME=%INSTALLER_NAME%-%PLATFORM%
  - set AUTOINSTALLER_ZIP_NAME=%INSTALLER_NAME%-auto.zip
  - set INSTALLER_NAME=%INSTALLER_NAME%-installer.exe
  - echo "Installer:%INSTALLER_NAME%"
  - ren trik-studio*installer*.exe %INSTALLER_NAME%
  - cd %APPVEYOR_BUILD_FOLDER%
  - if "%NEED_INSTALLER%" EQU "true" (appveyor PushArtifact installer\%INSTALLER_NAME%)
# pack autoinstaller
  - bash -c "env LC_ALL=C date -u"
  - cd %APPVEYOR_BUILD_FOLDER%/installer
  - 7z a -- %AUTOINSTALLER_ZIP_NAME% %INSTALLER_NAME% trik_studio*.qs reinstall*
  - cd %APPVEYOR_BUILD_FOLDER%
  - if "%NEED_AUTOZIP%" EQU "true" (appveyor PushArtifact installer\%AUTOINSTALLER_ZIP_NAME%)
# install
  - cd %APPVEYOR_BUILD_FOLDER%\installer
  - bash -c "env LC_ALL=C date -u"
  - cmd /c %INSTALLER_NAME% --script trik_studio_installscript.qs
  - dir C:\TRIKStudio
  - bash -c "env LC_ALL=C date -u"
  # deployment
  #- ps: if ( $artifacts.Count -eq 0 ) { exit 1 }
  - IF "x%server%" NEQ "x" (sshpass -p %password% rsync -avze 'ssh -o StrictHostKeyChecking=no' %INSTALLER_NAME% %server%:dl/ts/fresh/installer/)

before_deploy:
  - ps: if ( $artifacts.Count -eq 0 ) { exit 1 }

deploy:
  - provider: Environment
    name: trik-studio-fresh
    on:
      ARCH: 32
      APPVEYOR_PROJECT_SLUG: $(master_ci)

  - provider: Environment
    name: trik-studio-64
    on:
      ARCH: 64
      APPVEYOR_PROJECT_SLUG: $(master_ci)

  - provider: Environment
    name: github-release
    github_release_artifact: installer\$(AUTOINSTALLER_ZIP_NAME)
    on:
      ARCH: 32
      QT: 5.12
      CONFIGURATION: release
      APPVEYOR_REPO_TAG: true
      APPVEYOR_PROJECT_SLUG: $(master_ci)

on_finish:
  - ccache -s
  - bash -c "env LC_ALL=C date -u"
  # - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))


notifications:
 - provider: GitHubPullRequest
   on_build_failure: false
   template: "{{#passed}}Download:\n{{#jobs}}{{name}}\n{{#artifacts}} [{{fileName}}]({{permalink}}) \n {{/artifacts}}{{/jobs}}{{/passed}}"
