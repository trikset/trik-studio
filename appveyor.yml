#version: 999.{branch}-{build}
clone_folder: c:\studio
#test: off

clone_depth: 1
#shallow_clone: true

skip_commits:
  files:
    - 'buildScripts/travis/*'
    - '.travis.yml'
    - '**/*.html'
    - '**/*.txt'
    - '**/*.md'
  message: /\[NOCI\]/


environment:
  global:
    MSYS_DIR: C:\msys64
    APPVEYOR_SAVE_CACHE_ON_ERROR: true
    PYTHON_PATH: C:\Python35
    PYTHON_LIB: '%PYTHON_PATH%\libs'
    CCACHE_DIR: C:\ccache.cache
    BUILD_DIR: '%APPVEYOR_BUILD_FOLDER%\.build'
    PROJECT_FILE: studio
    TEST_SUITE: .\robots_kitBase_unittests.exe && .\robots_interpreterCore_unittests.exe && .\robots_twoDModel_unittests.exe && .\trik-v62-qts-generator-tests.exe && .\robots_utils_unittests.exe"
    APPVEYOR_CACHE_ENTRY_ZIP_ARGS: -t7z -m0=lzma -mx=9
    server:
      secure: w/DTEzu1t/sp9qUGZlRiBD17VG4I4w1k9uPFf5agU18=
    password:
      secure: TT5cKTVom4VTJrtg5NSU6g==
  matrix:
      - MINGW: C:\Qt\Tools\mingw530_32
        QTDIR: C:\Qt\5.11\mingw53_32
        QT: 5.11
      - MINGW: C:\Qt\Tools\mingw492_32
        QTDIR: C:\Qt\5.6\mingw49_32
        QT: 5.6

configuration:
#  - debug
  - release

#cache:
#  - '%BUILD_DIR% -> **\*.pr?, appveyor.yml'
#  - '%CCACHE_DIR% -> **\*.pr?, appveyor.yml'
#  - C:\ProgramData\chocolatey\bin -> appveyor.yml
#  - C:\ProgramData\chocolatey\lib -> appveyor.yml
#  - '%MSYS_DIR%\var\cache\pacman\pkg -> appveyor.yml'

init:
  - git config --global core.autocrlf true
  - if "x%appveyor_pull_request_number%" NEQ "x" set APPVEYOR_CACHE_SKIP_SAVE=true
  - if "x%appveyor_repo_branch%" NEQ "xmaster" set APPVEYOR_CACHE_SKIP_SAVE=true

clone_script:
    - cmd: |
         git clone --progress --depth=3 --single-branch --no-checkout --branch=%appveyor_repo_branch% https://github.com/%appveyor_repo_name%.git %appveyor_build_folder%
         cd %appveyor_build_folder%
         if "x%appveyor_pull_request_number%" == "x" ( git checkout -f %appveyor_repo_commit% ) else ( git fetch origin +refs/pull/%appveyor_pull_request_number%/merge: && git checkout -f FETCH_HEAD )
         git submodule update --init --recursive


install:
  - set PATH=%QTDIR%\bin;%MINGW%\bin;C:\msys64\usr\bin;%PATH%
  - pacman --verbose --noconfirm --sync ccache rsync curl
#--refresh --sysupgrade --ask=20
  - ccache.exe -V || appveyor DownloadFile "http://alam.srb2.org/ccache.exe" -FileName "ccache.exe" && xcopy /Y /V /I ccache.exe %MINGW%\bin && ccache -V
  - ccache -p || echo "Failed to print ccache config (missing -p option)"
  - if not exist %BUILD_DIR% mkdir %BUILD_DIR%
  - du -sh %BUILD_DIR% %CCACHE_DIR%
  - ccache -M 900M
  - which g++
  - g++ --version
  - dir C:\Qt\Tools\
  - dir C:\Qt


before_build:
  - curl https://raw.githubusercontent.com/MestreLion/git-tools/master/git-restore-mtime-bare > .fix-mtime.py
  - python "%PYTHON_PATH%\Tools\scripts\2to3.py" -v -p -w -n -f all .fix-mtime.py
  - sed -ri "s#line.(startswith|split)\(#line.\1\(b#g" .fix-mtime.py
  - python .fix-mtime.py
  - git submodule foreach --recursive python %cd%\.fix-mtime.py


build_script:
  - cd %BUILD_DIR%
  - qmake %APPVEYOR_BUILD_FOLDER%\%PROJECT_FILE%.pro -spec win32-g++ CONFIG+=%CONFIGURATION% CONFIG+=tests CONFIG+=silent # QMAKE_CXX="ccache g++"
  - mingw32-make -j2 qmake_all
  - mingw32-make -j2 -k all

test_script:
  - echo %cd%
  - cd %BUILD_DIR%\bin\%CONFIGURATION%
  - dir
  - cmd /c %TEST_SUITE%

after_test:
#  - bash %APPVEYOR_BUILD_FOLDER%\installer\build-trik-studio.sh %QTDIR%\bin %QTIFWDIR%\bin %BUILD_DIR%
  - windeployqt --%configuration% %BUILD_DIR%\bin\%CONFIGURATION%\trik-studio.exe

# zip and upload trik-studio's binaries
  - set PATH=%MSYS_DIR%/usr/bin/;%PATH%
  - pacman -Su --noconfirm sshpass zip
  - cd %BUILD_DIR%/
  - zip -r tsbin-%APPVEYOR_ACCOUNT_NAME%-qt%QT%.zip bin
  - sshpass -p "%password%" ssh -q -o StrictHostKeyChecking=no "%server%"
  - sshpass -p "%password%" scp tsbin-%APPVEYOR_ACCOUNT_NAME%-qt%QT%.zip %server%:/home/devops/dl/ts/fresh/

  
on_finish:
  - ccache -s


artifacts:
 - path: installer\trik-studio-offline-win32-installer.exe
   name: win32_installer.$CI_JOB_ID.exe
 - path: .build\bin\$(configuration)
   name: $(configuration)_bin
notifications:
 - provider: GitHubPullRequest
   template: "Download:\n{{#passed}}{{#jobs}}{{name}}\n{{#artifacts}} [{{fileName}}]({{permalink}}) \n {{/artifacts}}{{/jobs}}{{/passed}}"
