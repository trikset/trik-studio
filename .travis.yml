language: minimal

git:
  depth: 20

stages:
  - lint
  - build
  - installer
  - test

env:
  global:
    - PYENV_ROOT="$HOME/pyenv.root"
    - CONFIG=release
    - VERA=false
    - PROJECT=studio
    - TESTS=true
    - TRANSLATIONS=false
    - INSTALLER=false
    - BUILD_TIMEOUT=2400
    - EARLY_START_DOCKER_PULL_PID=$( if [ $TRAVIS_OS_NAME = 'linux' ] ; then time docker pull trikset/linux-builder ; else true ; fi >&2 & echo $!)
    - HEARTBEAT=$(while sleep 100; do echo "=====[ $SECONDS seconds, still building... ]====="; done >&2 & echo $! )
    - ALL_TESTS="./robots_kitBase_unittests && ./robots_interpreterCore_unittests && ./robots_twoDModel_unittests && ./trik-v62-qts-generator-tests && ./robots_utils_unittests && env ASAN_OPTIONS=detect_leaks=0 ./run-simulator-tests.sh"
    - QMAKE_EXTRA="CONFIG+=tests CONFIG+=noPch CONFIG+=ccache"
    - TRIK_QT="$HOME/TRIK_Qt"
    - secure: "Djp1JuoB/dDxIQwmYfaJIflulGaZk69djacFE4L/ippcFfcN9As/dzTvBHjHNV2urZoNGAH5iuIGgX0b6aMKIzQRcGbLOrr7yx3SiT/hJ/sh6tnDoiz6kVDiq6Nubf+Mpvgjbm3wuseqcdK4LzHLVv4bZh7cB+JPG4x5PndbD2RyaCoSwdqsZ+fZj0ixteVsGrexSW/w4ZPiAtTfxsRKYJmivLl3jQNm6b0g3AEr37BO/M88xSaECa3WagR6bSgWlNqhftBq51Qk/242LIhLKlLEDLNr4zj04SctO+dZQqT8T99REihHfgbzYg+oFG2/M4fpkxsHykKG8t+Ssgx6iuIMwP8nI/wH6zY68xsmLaMR0rXT8gRxXz2w6z1xwQlXbcRYTWH/PKrLFwIN4d+//GzHHnsh/e6TM6T5pv8t704wmcCer1MbHbHqfRUjK3CAKE62HzsHh4En1PmFsW5kCedmDwTvMvTMiwR7Sru0TrUJ4ldXXbIcfGwisJfhntUQ53eWsN0uZ0FjfZqLQtGEDpn4m+WZwf3cMXKicX18mGXeRsnEOOxK/b62qBTh+hBK+3li69jflVqJJzWqVa4GDkL10OgW5hk/IHCDiTPLqeg/6eCefZFn7FcT4iRdG5CzROfXY5Ep0Gf/ia+uBZBpvlQMQ84/WBLMhgHXGCJGwqU="
    - secure: "Bs6NDzxktMXnE4I8kctP7UZUx+/qaIyxVemruzhRMBrUT3yk68tvyKVmWy3z1/e1tR3Wm1GlJKk+NgdWporksgMJiHKYhkxtwM0GWkfR6lgQyUiZCYubinr4PU9/DsXtPa21lq/bEqXLe3Lz7BDOpWZ5lY8j58tCwZB+OsbmYiGdSsxXr1AtSKsX9t985J+iOG1lzFJT1BWXBnHxIyk24bGo7j1kg4IDD0OE5uxf1Q6COIOOWhOBAx6xCUgpnT/Myv4GPFv0kenlmyXLqB9t3Dndxd+Y4D0v/ak35TjqhCip6uTwJVjMDWX62Twrb2E/YK53nnn2nsSYlcgxKy5CQyKz3x8YmhqkOeXMx9OH4gT5pD1JRSk+4nJ+ht9Y9UCJX0vyDJKiHtWLzKLXP8B8xaABTlmqYAfiqkaEHO3fUst+9AA+0SkuBWsGOIFfQ2R6kVsvUii9Tm73dAc9z1q35zFkYQLoZ9mnXa7al+RxLQPhDeKuPdCa4DyQZS1cDbRJmMCqtoZGbwr/LEWpp0KYsZPlaMRSM1WvUwngG98M7ojZEyF1u6BVYbjnbCQKAM3qVFpGKbSMOoVPRPTU+DeSD5lFWDYn5Rc3Ls4vp/giAPfB7Vxpej6NrNLulMb/DPfC5Z9XdJBg9ZqAuYMogyZo8dgX0OAPOuDTwNZEv156x8g="



cache:
  timeout: 1000
  directories:
    - $PYENV_ROOT
    - $HOME/.ccache
    - $TRIK_QT

addons:
  artifacts:
    paths:
      - build.log

branches:
  except:
    - /dependabot.*/

matrix:
  include:
    - stage: lint
      os: linux
      services: docker
      env: CONFIG=debug VERA=true TESTS=$ALL_TESTS TRANSLATIONS=true QMAKE_EXTRA="$QMAKE_EXTRA CONFIG+=silent CONFIG+=small_debug_info CONFIG+=sanitizer CONFIG+=sanitize_undefined CONFIG+=sanitize_address"
      name: "Vera and translations"
      script:
      - ./buildScripts/travis/vera_translation.sh
      after_script:
      - kill $HEARTBEAT

    - stage: build
      os: linux
      services: docker
      name: "Linux release"
      env: QMAKE_EXTRA="$QMAKE_EXTRA CONFIG+=no-sanitizers CONFIG-=tests CONFIG+=silent CONFIG+=warn_off"
    - os: linux
      services: docker
      env: CONFIG=debug TESTS=$ALL_TESTS QMAKE_EXTRA="$QMAKE_EXTRA CONFIG+=silent CONFIG+=small_debug_info CONFIG+=sanitizer CONFIG+=sanitize_undefined CONFIG+=sanitize_address"
      name: "Linux debug + tests"
    - os: osx
      language: cpp
      name: "macOS release"
      env:  QMAKE_EXTRA="$QMAKE_EXTRA CONFIG+=no-sanitizers" BUILD_TIMEOUT=1800
    - os: osx
      language: cpp
      name: "macOS debug + tests"
      env: CONFIG=debug  VERA=false TESTS=$ALL_TESTS QMAKE_EXTRA="$QMAKE_EXTRA CONFIG+=silent CONFIG+=small_debug_info CONFIG+=sanitizer CONFIG+=sanitize_undefined CONFIG+=sanitize_address" BUILD_TIMEOUT=1800

    - stage: installer
      os: linux
      services: docker
      name: "Linux release installer + checker"
      env: INSTALLER=true QMAKE_EXTRA="$QMAKE_EXTRA CONFIG+=no-sanitizers CONFIG-=tests CONFIG+=silent CONFIG+=warn_off"
    - os: osx
      language: cpp
      name: "macOS release installer"
      env: INSTALLER=true QMAKE_EXTRA="$QMAKE_EXTRA CONFIG+=no-sanitizers" BUILD_TIMEOUT=1800

    - stage: test
      dist: trusty
      before_install:
      - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 762E3157
      install:
      - sudo apt-get -y install p7zip-full libxkbcommon-x11-0
      - sudo add-apt-repository -y ppa:deadsnakes/ppa
      - sudo apt update
      - sudo apt-get install -y --no-install-recommends python3.7-minimal
      script:
      - ./buildScripts/travis/run_clean_env_test.sh

before_install:
  - if [[ $TRAVIS_OS_NAME  == osx ]] ; then [[ -n ${TRIK_PYTHON3_VERSION_MINOR:-} ]] || export TRIK_PYTHON3_VERSION_MINOR="$(python3 -V | sed 's#^Python [0-9]\.\([0-9]\)\.[0-9]*$#\1#g')" ; fi
  - if ./buildScripts/travis/has_only_skipped_files.sh ; then echo "Triggering early terminate..." ; set -xo functrace ; travis_terminate 0 ; fi
  - time wait $EARLY_START_DOCKER_PULL_PID || true
  - ./buildScripts/travis/before_install.sh
  - export CCACHE_CONFIGPATH=$HOME/ccache.conf

install:
  - ./buildScripts/travis/install.sh

before_script:
  - if [ "$TRAVIS_OS_NAME" = "linux" ] ; then export EXECUTOR="time docker exec -i builder " ; else export EXECUTOR="time " ;fi
  - export CCACHE_DIR=$HOME/.ccache/$TRAVIS_OS_NAME-$CONFIG

script:
  - ./buildScripts/travis/script.sh & WPID=$!
  - sleep $BUILD_TIMEOUT && { kill $WPID || true ; echo "***KILLED ON TIMEOUT***" ; } & KPID=$!
  - export TIMEOUT=false
  - wait $WPID ; RES=$?; kill -0 $KPID && kill $KPID > /dev/null || export TIMEOUT=true ; ( exit $RES )
  - if $INSTALLER ; then ./buildScripts/travis/test.sh ; fi
  - if $INSTALLER ; then ./buildScripts/travis/build_installer.sh ; fi

after_script:
  - ./buildScripts/travis/after_script.sh
  - kill $HEARTBEAT
  - sync ; wc -l build.log ; tail -n 1000 build.log

after_success:
  - true
